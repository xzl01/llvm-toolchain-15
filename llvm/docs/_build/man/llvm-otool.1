.\" Man page generated from reStructuredText.
.
.TH "LLVM-OTOOL" "1" "2021-09-18" "13" "LLVM"
.SH NAME
llvm-otool \- Mach-O dumping tool
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.sp
\fBllvm\-otool\fP [\fIoption…\fP] \fI[file…]\fP
.SH DESCRIPTION
.sp
\fBllvm\-otool\fP is a tool for dumping Mach\-O files.
.sp
It attempts to be command\-line\-compatible and output\-compatible with macOS’s
\fBotool\fP\&.
.SH OPTIONS
.INDENT 0.0
.TP
.B \-arch <value>
Select slice of universal Mach\-O file.
.UNINDENT
.INDENT 0.0
.TP
.B \-C
Print linker optimization hints.
.UNINDENT
.INDENT 0.0
.TP
.B \-D
Print shared library id.
.UNINDENT
.INDENT 0.0
.TP
.B \-d
Print data section.
.UNINDENT
.INDENT 0.0
.TP
.B \-f
Print universal headers.
.UNINDENT
.INDENT 0.0
.TP
.B \-G
Print data\-in\-code table.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-help\-hidden
Print help for hidden flags.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-help
Print help.
.UNINDENT
.INDENT 0.0
.TP
.B \-h
Print mach header.
.UNINDENT
.INDENT 0.0
.TP
.B \-I
Print indirect symbol table.
.UNINDENT
.INDENT 0.0
.TP
.B \-j
Print opcode bytes.
.UNINDENT
.INDENT 0.0
.TP
.B \-L
Print used shared libraries.
.UNINDENT
.INDENT 0.0
.TP
.B \-l
Print load commands.
.UNINDENT
.INDENT 0.0
.TP
.B \-mcpu=<value>
Select cpu for disassembly.
.UNINDENT
.INDENT 0.0
.TP
.B \-o
Print Objective\-C segment.
.UNINDENT
.INDENT 0.0
.TP
.B \-P
Print __TEXT,__info_plist section as strings.
.UNINDENT
.INDENT 0.0
.TP
.B \-p <function name>
Start disassembly at <function name>.
.UNINDENT
.INDENT 0.0
.TP
.B \-r
Print relocation entries.
.UNINDENT
.INDENT 0.0
.TP
.B \-s <segname> <sectname>
Print contents of section.
.UNINDENT
.INDENT 0.0
.TP
.B \-t
Print text section.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-version
Print version.
.UNINDENT
.INDENT 0.0
.TP
.B \-V
Symbolize disassembled operands (implies \fI\%\-v\fP).
.UNINDENT
.INDENT 0.0
.TP
.B \-v
Verbose output / disassemble when printing text sections.
.UNINDENT
.INDENT 0.0
.TP
.B \-X
Omit leading addresses or headers.
.UNINDENT
.INDENT 0.0
.TP
.B \-x
Print all text sections.
.UNINDENT
.INDENT 0.0
.TP
.B @<FILE>
Read command\-line options and commands from response file \fI<FILE>\fP\&.
.UNINDENT
.SH EXIT STATUS
.sp
\fBllvm\-otool\fP exits with a non\-zero exit code if there is an error.
Otherwise, it exits with code 0.
.SH BUGS
.sp
To report bugs, please visit <\fI\%https://bugs.llvm.org/\fP>.
.SH SEE ALSO
.sp
\fBllvm\-nm(1)\fP, \fBllvm\-objdump(1)\fP
.SH AUTHOR
Maintained by the LLVM Team (https://llvm.org/).
.SH COPYRIGHT
2003-2021, LLVM Project
.\" Generated by docutils manpage writer.
.
