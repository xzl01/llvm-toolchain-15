## Autogenerated by libcxxabi configuration.
# Do not edit!

# Lit parameters serialized here for llvm-lit to pick them up
config.enable_experimental = False
config.target_triple = "x86_64-pc-linux-gnu"


import os
import site

config.cxx_under_test           = "/home/sylvestre/dev/debian/pkg-llvm/llvm-toolchain/branches/llvm-project/build-llvm/tools/clang/stage2-bins/bin/clang++"
config.project_obj_root         = "/home/sylvestre/dev/debian/pkg-llvm/llvm-toolchain/branches/llvm-project/libcxxabi/build"
config.libcxxabi_hdr_root       = "/home/sylvestre/dev/debian/pkg-llvm/llvm-toolchain/branches/llvm-project/libcxxabi/build"
config.libcxxabi_src_root       = "/home/sylvestre/dev/debian/pkg-llvm/llvm-toolchain/branches/llvm-project/libcxxabi"
config.libcxxabi_obj_root       = "/home/sylvestre/dev/debian/pkg-llvm/llvm-toolchain/branches/llvm-project/libcxxabi/build"
config.abi_library_root         = "/home/sylvestre/dev/debian/pkg-llvm/llvm-toolchain/branches/llvm-project/libcxxabi/build/lib"
config.libcxx_src_root          = "/home/sylvestre/dev/debian/pkg-llvm/llvm-toolchain/branches/llvm-project/libcxx"
config.cxx_headers              = "/home/sylvestre/dev/debian/pkg-llvm/llvm-toolchain/branches/llvm-project/build-llvm/tools/clang/stage2-bins/include/c++/v1"
config.libunwind_headers        = "/home/sylvestre/dev/debian/pkg-llvm/llvm-toolchain/branches/llvm-project/libunwind/include"
config.cxx_library_root         = "/home/sylvestre/dev/debian/pkg-llvm/llvm-toolchain/branches/llvm-project/libcxx/build/lib"
config.llvm_unwinder            = True
config.builtins_library         = "/home/sylvestre/dev/debian/pkg-llvm/llvm-toolchain/branches/llvm-project/build-llvm/tools/clang/stage2-bins/lib/clang/14.0.0/lib/linux/libclang_rt.builtins-x86_64.a"
config.enable_threads           = True
config.target_info              = "libcxx.test.target_info.LocalTI"
config.executor                 = "/usr/bin/python3.9 /home/sylvestre/dev/debian/pkg-llvm/llvm-toolchain/branches/llvm-project/libcxx/utils/run.py"
config.libcxxabi_shared         = True
config.enable_shared            = True
config.host_triple              = "x86_64-pc-linux-gnu"
config.sysroot                  = ""
config.gcc_toolchain            = ""
config.cxx_ext_threads          = False

config.pstl_src_root            = "" if False else None
config.pstl_obj_root            = "" if False else None

# Code signing
config.llvm_codesign_identity   = ""

site.addsitedir(os.path.join(config.libcxxabi_src_root, 'test'))
site.addsitedir(os.path.join(config.libcxx_src_root, 'utils'))

# name: The name of this test suite.
config.name = 'libc++abi'

# suffixes: A list of file extensions to treat as test files.
config.suffixes = ['.cpp', '.s']

# test_source_root: The root path where tests are located.
config.test_source_root = os.path.join(config.libcxxabi_src_root, 'test')

# Allow expanding substitutions that are based on other substitutions
config.recursiveExpansionLimit = 10

# Infer the test_exec_root from the build directory.
config.test_exec_root = os.path.join(config.libcxxabi_obj_root, 'test')

import libcxx.test.format
config.test_format = libcxx.test.format.CxxStandardLibraryTest()

lit_config.note('Using configuration variant: libcxxabi')
import libcxxabi.test.config
configuration = libcxxabi.test.config.Configuration(lit_config, config)
configuration.configure()
configuration.print_config_info()
